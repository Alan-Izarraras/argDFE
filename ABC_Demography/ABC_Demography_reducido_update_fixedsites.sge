#!/bin/bash
# Use current working directory
#$ -cwd
#
# Join stdout and stderr
#$ -j y
#
# Run job through bash shell
#$ -S /bin/bash
#
#You can edit the scriptsince this line
#
# Your job name
#$ -N abc_stdpopsim_chr1
#
# Send an email after the job has finished
# -m e
# -M alanizarraras3@gmail.com
#
# If modules are needed, source modules environment (Do not delete the next line):

#
# Add any modules you might require:

#
# Write your commands in the next line

### Modifying this script so that its more efficient and avoids having to run PReFerSim for each frequency value, instead PReFerSim will only run twice. (199 runs vs 2 runs)
### This should make simulations muuuuuch faster.
#Segun yo tenia un folder con la instalacion de prefer en mi laptop pero no lo encuentro, entonces no pued probarlo porque los archivos ahora solo existen en el cluster.
#necesito el aoutput.all luego el alleles luego el traj.

module load r/4.2.1

RandomNumber=$SGE_TASK_ID

Parameters="../Results/ABCAnalysisPopExpansion"$SGE_TASK_ID".txt"
CurrentNumber=1

LeftParametersFile="../Results/ABCAnalysisPopExpansion/DemographyData"$SGE_TASK_ID".txt"
#Esto es para volver a escribirlo al paralelizar.
rm $LeftParametersFile

FullAlleles="../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID".txt"
AlleleList="../Results/ABCAnalysisPopExpansion/Output/Traj_"$SGE_TASK_ID".txt"
rm $FullAlleles
rm $AlleleList

touch $FullAlleles
touch $AlleleList
AlleleNumber=0 #Cuidado con este
# 541

## Obtain parameter files
#Esto corre con argumentos para poner la semilla aleatoria.

#python ABC_RandomNumbers_update_fixedsites.py $SGE_TASK_ID $SGE_TASK_ID
python ABC_RandomNumbers_update_fixedsites_stdpopsim.py $SGE_TASK_ID $SGE_TASK_ID

echo seeds used for python RandomNumbers are $SGE_TASK_ID and $RandomNumber

#Cada que corre, el output es el mismo.?

#Deberia tener (LeftParams, Demogrfia, ParamFiles, )

LeftParametersFile="../Results/ABCAnalysisPopExpansion/DemographyData"$SGE_TASK_ID".txt"
CurTrajFile="../Results/ABCAnalysisPopExpansion/Output/Traj_"$SGE_TASK_ID".txt"
PassTrajFile="../Results/ABCAnalysisPopExpansion/Output/Traj_"$SGE_TASK_ID"_"$TrajRepNumber".txt"

ParameterFile="../Results/ABCAnalysisPopExpansion/ParameterFile_"$SGE_TASK_ID".txt"
ParameterFileB="../Results/ABCAnalysisPopExpansion/ParameterFile_"$SGE_TASK_ID"_B.txt"
###Esto de aqui es la lista de valores tbs que toma msel
RandomNumberFile="../Results/ABCAnalysisPopExpansion/DemographyScales"$SGE_TASK_ID".txt"

###
MsselOut="../Results/ABCAnalysisPopExpansion/Output/MsselOut"$SGE_TASK_ID".txt"

#Creo que eso ya no es necesario..? Igual no debería romper nada
SeedName=$SGE_TASK_ID

echo La semilla aleatoria es ${SeedName}
echo Simulación neutral para demografía

# Set the number of the random seed.

RANDOM_SEED=${SeedName}

### This is the default sample size in PReFerSim. You can change this value if you want with the option n in the parameter file before running PReFerSim.

Sample_size=200
DerivedAlleleNumber=1
ValorFrecuencia=1

# First run of PReFerSim. You must set the PrintSegSiteInfo parameter to 1 to produce an outfile

GSL_RNG_SEED=$RANDOM_SEED GSL_RNG_TYPE=mrg /mnt/Timina/dortega/aizarraraz/PRF/PReFerSim-master/./PReFerSim ../Results/ABCAnalysisPopExpansion/ParameterFile_"$SGE_TASK_ID".txt $SGE_TASK_ID

#Esto genera... PReFerSimOutput3.txt.3.dog_out.txt y PReFerSimOutput3.txt.3.full_out.txt

echo Se está usando el archivo: PReFerSimParameters"$SGE_TASK_ID".txt

# Run perl script to extract out the allele IDs of variants that have the frequency you are interested in.

#Hago una carpeta de resultados exclusivo para demografía.
NombreArbol="../Results/ABCAnalysisPopExpansion/Output/trees/trees_ABCDemography_"${SGE_TASK_ID}".txt"
rm $NombreArbol
touch $NombreArbol

#El output.full tiene la info de las mutaciones y sus frecuencias. Antes, corria lo de abajo para cada corrida
#Ahora el objectivo es... generar cada Alleles_ individual pero luego catearlos en uno solo..?
for ValorFrecuencia in $(seq 0.005 0.005 0.995);
do

#perl GetListOfRunsWhereFrequencyMatches.pl $ValorFrecuencia $ValorFrecuencia ../Results/ABCAnalysisPopExpansion/Output/Output."$SGE_TASK_ID".full_out.txt ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID"_"$ValorFrecuencia".txt

perl GetList_2_update.pl $ValorFrecuencia $ValorFrecuencia ../Results/ABCAnalysisPopExpansion/Output/Output."$SGE_TASK_ID".full_out.txt ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID"_"$ValorFrecuencia".txt

#Modificado para escribir info de frecuencia en la segunda columna.

done

#Ahora tengo 199 archivos Alleles_sge_freq
mkdir ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs
mv ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID"_0.* ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/

#Quizas aqui cuando hago el cat, el orden importa...?
cat ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/Alleles_"$SGE_TASK_ID"_* > ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID"_full_freqs.txt
#Esto corta la segunda columna
sed 's/ .*//' ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID"_full_freqs.txt > ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID".txt

#Sorting step
sort -nr -o ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID".txt ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID".txt

# Second run of PReFerSim. This takes the list of allele IDs you want trajectories for  and re-runs PReFerSim.
#
GSL_RNG_SEED=$RANDOM_SEED GSL_RNG_TYPE=mrg /mnt/Timina/dortega/aizarraraz/PRF/PReFerSim-master/./PReFerSim "../Results/ABCAnalysisPopExpansion/ParameterFile_"$SGE_TASK_ID"_B.txt" $SGE_TASK_ID

#this generates the Traj_file hmmm so how tf do I know what prefersim is doing. 
#I thought it was one of those perl scripts that would be easy to see whats happening but nooo. 

mv ../Results/ABCAnalysisPopExpansion/Output/Traj_"$SGE_TASK_ID".txt ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/

#Breaks the Traj_ file into Traj_freq for each frequency value. 
python traj_break.py $SGE_TASK_ID

#Now I have a bunch of trajectories named by starting frequency.

###################################################### Step 2) Transform the allele frequency trajectories

#Something like this so Im looping through the allele files.
mkdir ../Results/ABCAnalysisPopExpansion/Output/trees/seed_"$SGE_TASK_ID"/

for f in $(seq 0.005 0.005 0.995);
do

echo working of frequency ${f}

DerivedAlleleNumber=$(echo "($f * 200 + 0.5)/1" | bc)


#These are going to be looped for every file
CurrentTrajs="../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/ReducedTrajectories"$SGE_TASK_ID"_"$f".txt" #Agregar identificador unico
ResampledTrajectory="../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/ResampledTrajs"$SGE_TASK_ID"_"$f".txt"
TrajsMsselLike="../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/TrajMsselLike"$SGE_TASK_ID"_"$f".txt"

#Ruta del archivo de demografia
LastPopSize=$( tail -n1 ../Results/ABCAnalysisPopExpansion/Output/DemographicHistory"$SGE_TASK_ID".txt | awk '{print $1}' )

echo "Last pop size = "$LastPopSize

#This should be subfolder and looped for each freq.
AlleleCount=$( wc -l ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/Alleles_${SGE_TASK_ID}_"$f".txt | tail -n1 | awk '{print $1}' )
echo Se encontraron $AlleleCount alelos en el valor de frecuencia $DerivedAlleleNumber

if [ "$DerivedAlleleNumber" -eq 1 ]; then
    SingletonCount="$AlleleCount"
fi

Reps=$( ls ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/Alleles_${SGE_TASK_ID}_"$f".txt | wc -l )

#Solo tengo que imprimir los mismos dos valroes el numero de veces que hay alelos.
TimeFraction=$(head -n1 ../Results/ABCAnalysisPopExpansion/DemographyScales"$SGE_TASK_ID".txt | awk '{print $1}')
PopFraction=$(head -n1 ../Results/ABCAnalysisPopExpansion/DemographyScales"$SGE_TASK_ID".txt | awk '{print $2}')
Rho=1

RandFile="../Results/ABCAnalysisPopExpansion/DemographyScales"$SGE_TASK_ID".txt"
rm $RandFile
touch $RandFile

#this shoudl stay the same...

if [ "$AlleleCount" -eq 0 ]; then
    Temp_TimeFraction="$TimeFraction"
    Temp_PopFraction="$PopFraction"
    String="$Temp_TimeFraction\t$Temp_PopFraction\n"
    echo -ne "$String" >> $RandFile
else
    for ((x=0; x<$AlleleCount; x++)); do
      String="$TimeFraction\t$PopFraction\n"
      echo -ne "$String" >> $RandFile
    done
fi

echo RandFile has this number of lines
wc -l "$RandFile" | awk '{print $1}'

echo popscales for this demography are $TimeFraction and $PopFraction
echo which are being used for $AlleleCount alleles

### Probemos si todo funciona hasta aquí ###
### Ya funciona hasta aqui ###

### This script creates the trajectory in a format that mssel3 likes.
### May encounter issues of Traj file is empty..? but if Traj is empty, Allele is empty so...
#perl TrajToMsselFormat.pl ../Results/ABCAnalysisPopExpansion/Output/Traj_ $LastPopSize ../Results/ABCAnalysisPopExpansion/Output/TrajMsselLike$SGE_TASK_ID.txt $AlleleCount 0 $SGE_TASK_ID

perl Traj_mssel_2.pl ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/Traj_ $LastPopSize ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/TrajMsselLike"$SGE_TASK_ID"_"$f".txt $AlleleCount 0 $SGE_TASK_ID $f #este ultimo realmente es $f
#Modificar TrajToMssel para aceptar input con distinto nombramiento

### stepftn discretizes the allele frequency trajectories according to a set of frequency bounds defined in freqints.h .This helps to reduce the computing time. If you want to change this, change the bounds in freqints.h and
### recompile stepftn using gcc -O3 -o stepftn stepftn.c -lm
cat $TrajsMsselLike | /mnt/Timina/dortega/aizarraraz/PRF/PReFerSim-master/./stepftn > $CurrentTrajs

#Genera ReducedTrajectories

###################################################### Step 3) Simulate trees based on the allele frequency trajectory

NombreArbol="trees_ABCDemography_"${SGE_TASK_ID}".txt"
NombreArbolSub="trees_ABCDemography_"${SGE_TASK_ID}"_${f}.txt"
rm ../Results/ABCAnalysisPopExpansion/Output/trees/seed_"$SGE_TASK_ID"/$NombreArbolSub
rm ../Results/ABCAnalysisPopExpansion/Output/trees/seed_"$SGE_TASK_ID"/$NombreArbol
#Recuerda resetear nombre arbol. meter semilla aleatorea a msel y leer de RandomNumberFile

ThingsToPrint="$(( $DerivedAlleleNumber + 1))"

#Hago subcarpeta por valor de frecuencia sino voy a llenar la carpeta trees. trees > Seed_"$SGE_TASK_ID" >
/mnt/Timina/dortega/aizarraraz/PRF/PReFerSim-master/./mssel3 $ThingsToPrint $AlleleCount 1 $DerivedAlleleNumber $CurrentTrajs 1 -r 0.0 2 -t 0.0 -eN 0.0 1.0 -eN tbs tbs -seeds $RandomNumber $RandomNumber $RandomNumber -T < $RandFile | grep '(' >> ../Results/ABCAnalysisPopExpansion/Output/trees/seed_"$SGE_TASK_ID"/$NombreArbolSub

echo $NombreArbol done

#El archivo concatenado con todos los arboles de esa semilla van al directorio trees.
cat ../Results/ABCAnalysisPopExpansion/Output/trees/seed_"$SGE_TASK_ID"/trees_ABCDemography_"${SGE_TASK_ID}"_* > ../Results/ABCAnalysisPopExpansion/Output/trees/trees_ABCDemography_"${SGE_TASK_ID}".txt


done

rm $RandFile
touch $RandFile

##Esto va al final del paso 2??
rm $MsselOut
rm $MsselFile
rm $ReducedTrajectories
rm $DemHistFile
rm $AlleleNumberFile
rm $RandomNumberFile
rm $ParameterFileB
rm $ParameterFile
rm $FullAlleles
rm $AlleleList

rm $CurTrajFile
rm $CurrentTrajs
rm $ResampledTrajectory
rm $TrajsMsselLike
rm $PassTrajFile

### Paso 3: Generar matrices y comparar.

#Abrir arboles en R.
#Previous step to split singletons from each tree file.

echo we have $SingletonCount singletons in this demography run
echo splitting singletons from tree files and extracting distances . . .

# Genera el archivo singletones vacio y archivo temporal vacio

singleton_file="/mnt/Timina/dortega/aizarraraz/PRF/Demografia/ABC_runs/Results/ABCAnalysisPopExpansion/Output/trees/singleton/singletons_"$SGE_TASK_ID".txt"
archivo_temporal="/mnt/Timina/dortega/aizarraraz/PRF/Demografia/ABC_runs/Results/ABCAnalysisPopExpansion/Output/trees/tmp_file_"$SGE_TASK_ID".txt"

# Cut the desired number of lines from the original file and save them to the new file
head -n "$SingletonCount" "../Results/ABCAnalysisPopExpansion/Output/trees/"$NombreArbol"" > "$singleton_file"
#Necesito hacer 2 nombres para los arboles, uno para los de cada frecuencia y otro para los concatenados NombreArbol y NombreArbolSub

# Remove the cut lines from the original file and save the remaining lines to a temporary file
tail -n +$((SingletonCount + 1)) "../Results/ABCAnalysisPopExpansion/Output/trees/"$NombreArbol"" > "$archivo_temporal"

# Replace the original file with the temporary file
mv "$archivo_temporal" "../Results/ABCAnalysisPopExpansion/Output/trees/"$NombreArbol""

#Extract branch lengths from singletons
cut -d "," -f 1 "$singleton_file" | cut -b 1-3 --complement | sed 's/$/ 0/' > /mnt/Timina/dortega/aizarraraz/PRF/Demografia/ABC_runs/Results/ABCAnalysisPopExpansion/Output/trees/singleton/singletons_"$SGE_TASK_ID"_ready.txt

#Obtain present time from demografic history
PresentSize=$(awk 'NR==2 {print $1}' ../Results/ABCAnalysisPopExpansion/Output/DemographicHistory"$SGE_TASK_ID".txt)
PastSize=$(awk 'NR==1 {print $1}' ../Results/ABCAnalysisPopExpansion/Output/DemographicHistory"$SGE_TASK_ID".txt)

echo present size is $PresentSize and past size is $PastSize

#Cambie esto para testear algo.
Rscript Matrix_Differences.R $SGE_TASK_ID $PresentSize $PastSize

echo Demografic comparison for Random seed $SGE_TASK_ID done
echo data written to report file

rm $singleton_file
rm $archivo_temporal

rm ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID"_full_freqs.txt
rm ../Results/ABCAnalysisPopExpansion/Output/Alleles_"$SGE_TASK_ID"*
rm ../Results/ABCAnalysisPopExpansion/Output/DemographicHistory"$SGE_TASK_ID".txt
rm ../Results/ABCAnalysisPopExpansion/Output/Output."$SGE_TASK_ID"*
rm ../Results/ABCAnalysisPopExpansion/Output/trees/seed_"$SGE_TASK_ID"/trees_*
rmdir ../Results/ABCAnalysisPopExpansion/Output/trees/seed_"$SGE_TASK_ID"/

rm ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/Alleles_*
rm ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/Reduced*
rm ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/Traj*
rmdir ../Results/ABCAnalysisPopExpansion/Output/Allele_"$SGE_TASK_ID"_freqs/

rm ../Results/ABCAnalysisPopExpansion/DemographyData"$SGE_TASK_ID".txt
rm ../Results/ABCAnalysisPopExpansion/DemographyScales"$SGE_TASK_ID".txt

### Esto debería funcionar. 
#ahora, si quisiera hacer esto de 10 en 10, cómo lo haría? 
#No sé jajajaja 





